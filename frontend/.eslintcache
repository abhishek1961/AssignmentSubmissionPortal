[{"C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\index.js":"1","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\Routes.js":"2","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\App.js":"4","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\Dashboard.js":"5","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\auth\\Signin.js":"6","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\auth\\Signup.js":"7","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\auth\\helper\\authapicall.js":"8","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\backenduri.js":"9","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\StudentPanel.js":"10","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\helper\\InstructorRoute.js":"11","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\InstructorPanel.js":"12","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\helper\\StudenRoute.js":"13","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\AllSubmissions.js":"14","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\UpcomingAssignments.js":"15","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\StudentSubmissions.js":"16","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\helper\\apicall.js":"17","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\InstructorAssignments.js":"18"},{"size":553,"mtime":1610175082783,"results":"19","hashOfConfig":"20"},{"size":1631,"mtime":1610195623824,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":528,"mtime":499162500000,"results":"23","hashOfConfig":"20"},{"size":2851,"mtime":1610358661063,"results":"24","hashOfConfig":"20"},{"size":3797,"mtime":1610310735299,"results":"25","hashOfConfig":"20"},{"size":5814,"mtime":1610311348828,"results":"26","hashOfConfig":"20"},{"size":2304,"mtime":1610303316444,"results":"27","hashOfConfig":"20"},{"size":44,"mtime":1610181768441,"results":"28","hashOfConfig":"20"},{"size":425,"mtime":1610306010067,"results":"29","hashOfConfig":"20"},{"size":747,"mtime":1610191286598,"results":"30","hashOfConfig":"20"},{"size":439,"mtime":1610306005566,"results":"31","hashOfConfig":"20"},{"size":743,"mtime":1610191290676,"results":"32","hashOfConfig":"20"},{"size":6958,"mtime":1610312997514,"results":"33","hashOfConfig":"20"},{"size":6358,"mtime":1610307235952,"results":"34","hashOfConfig":"20"},{"size":3129,"mtime":1610301621754,"results":"35","hashOfConfig":"20"},{"size":3205,"mtime":1610290602573,"results":"36","hashOfConfig":"20"},{"size":6315,"mtime":1610358114972,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"1a90qz5",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"41"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"41"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\index.js",["83"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Routes from './Routes'\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <App /> */}\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["84","85"],"C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\Routes.js",[],"C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\App.js",[],"C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\Dashboard.js",["86","87"],"C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\auth\\Signin.js",["88","89","90","91","92"],"import React,{useState,useEffect} from 'react'\r\n\r\nimport {Link,Redirect} from 'react-router-dom'\r\n\r\nimport {authenticate, signin,isAuthenticated} from './helper/authapicall'\r\n\r\nfunction Signin(){\r\n    const [values,setValues]=useState({\r\n        \r\n        email:'',\r\n        password:'',        \r\n        error:'',\r\n        success:false,\r\n        loading:false,\r\n        didRedirect:false\r\n    })\r\n\r\n    const {email,password,error,success,loading,didRedirect}=values\r\n\r\n    const handleChange=name=>event=>{\r\n      if(name=='subjects'){\r\n        let subjects = Array.from(event.target.selectedOptions, option => option.value);\r\n        setValues({...values,error:false,subjects:subjects})\r\n      }\r\n      else{\r\n        setValues({...values,error:false,[name]:event.target.value})\r\n      }\r\n      \r\n      // console.log(values)\r\n    }\r\n\r\n    const onSubmit=event=>{\r\n      event.preventDefault()\r\n      setValues({...values,error:false,loading:true})\r\n      \r\n      signin({email,password})\r\n      .then(data=>{\r\n        if(data.error){\r\n          setValues({...values,error:data.error,success:false})\r\n        }\r\n        else{\r\n           \r\n         \r\n          authenticate(data,()=>{\r\n            setValues({...values,email:\"\",password:\"\",error:\"\",success:true})\r\n            setTimeout(()=>{setValues({...values,didRedirect:true})},500)\r\n            \r\n\r\n          })\r\n        }\r\n      })\r\n      .catch(console.log('error in sign in'))\r\n    }\r\n\r\n   const performRedirect=()=>{\r\n       if(didRedirect){console.log(didRedirect)\r\n           if(isAuthenticated().role==1){\r\n               return <Redirect to='/instructor-dashboard'/>\r\n           }\r\n           else if(isAuthenticated().role==0){\r\n            return <Redirect to='/student-dashboard'/>\r\n           }\r\n           else{console.log('nahi mila')\r\n            return <Redirect to='/'/>\r\n            \r\n           }\r\n       }\r\n   }\r\n\r\n    useEffect(()=>{\r\n        if(isAuthenticated()){console.log(isAuthenticated())\r\n            setValues({...values,didRedirect:true})\r\n        }\r\n      \r\n  },[])\r\n\r\n    function signupForm(){\r\n        return(\r\n            <div className=\"row\">\r\n            <div className=\"col-12 text-left\">\r\n              <form>                \r\n                <div className=\"form-group my-2\">\r\n                  <label className=\"text-light\">Email</label>\r\n                  <input className=\"form-control\" onChange={handleChange(\"email\")} type=\"email\" value={email} />\r\n                </div>\r\n    \r\n                <div className=\"form-group my-2\">\r\n                  <label className=\"text-light\">Password</label>\r\n                  <input className=\"form-control\" onChange={handleChange(\"password\")} type=\"password\" value={password} />\r\n                </div>\r\n\r\n                \r\n               \r\n                \r\n\r\n                <button className=\"btn btn-success btn-block w-100\" onClick={onSubmit}>Submit</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n\r\n    const successMessage=()=>{\r\n      return(\r\n        <div className='alert alert-success' style={{display:success ? '':'none'}}>\r\n        Sucessfully sign in        \r\n      </div>\r\n      )\r\n    }\r\n\r\n    const errorMessage=()=>{\r\n      return(\r\n        <div className='alert alert-danger' style={{display:error ? '':'none'}}>\r\n        {error}\r\n      </div>\r\n      )\r\n    }\r\n\r\n    return(\r\n        <div className='background-dark'>\r\n          <div className='pt-5 container'>\r\n          <h3 className=\"text-light text-center mb-4\">Sign In</h3>\r\n            {successMessage()}\r\n            {errorMessage()}\r\n            {signupForm()}\r\n            {performRedirect()}\r\n            <Link className='float-right' to='/signup'>Signup</Link>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signin","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\auth\\Signup.js",["93","94","95"],"import React,{useState,useEffect} from 'react'\r\n\r\nimport {Link,Redirect} from 'react-router-dom'\r\n\r\nimport {getAllSubjects,signup,addSubjectapi} from './helper/authapicall'\r\n\r\nfunction Signup(){\r\n    const [values,setValues]=useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        role:0,\r\n        subjects:[],\r\n        error:'',\r\n        success:false,\r\n        loading:false,\r\n        allSubjects:[],\r\n        addSub:'',\r\n        didRedirect:false,\r\n        flag:0\r\n    })\r\n\r\n    const {name,email,password,role,subjects,error,success,allSubjects,addSub,didRedirect,flag}=values\r\n\r\n    const handleChange=name=>event=>{\r\n      if(name=='subjects'){\r\n        let subjects = Array.from(event.target.selectedOptions, option => option.value);\r\n        setValues({...values,error:false,subjects:subjects})\r\n      }\r\n     \r\n      else{\r\n        setValues({...values,error:false,[name]:event.target.value})\r\n      }\r\n      \r\n      // console.log(values)\r\n    }\r\n\r\n    const onSubmit=event=>{\r\n      event.preventDefault()\r\n      setValues({...values,error:false,loading:true})\r\n           \r\n      signup({name,email,password,role,subjects})\r\n      .then(data=>{\r\n        if(data.error){\r\n          setValues({...values,error:data.error,success:false})\r\n        }\r\n        else{\r\n          setValues({...values,name:\"\",email:\"\",password:\"\",error:\"\",role:0,subjects:[],success:true})\r\n          setTimeout(()=>{setValues({...values,didRedirect:true})},500)\r\n        }\r\n      })\r\n      .catch(console.log('error in sign un'))\r\n    }\r\n\r\n    const performRedirect=()=>{\r\n      if(didRedirect){\r\n        return <Redirect to='/'/>\r\n      }\r\n  }\r\n\r\n   const loadSub=()=>{\r\n    getAllSubjects().then(data=>{ \r\n      setValues({...values,allSubjects:data.subjects})\r\n    })\r\n   }\r\n\r\n    useEffect(()=>{\r\n      //get subjects\r\n     \r\n        loadSub(getAllSubjects())\r\n     \r\n      \r\n  },[flag])\r\n\r\n  const addSubject=event=>{\r\n    event.preventDefault()\r\n    addSubjectapi({name:addSub}).then(\r\n      data=>{console.log(data)\r\n        if(data.error){\r\n          setValues({...values,role:1,error:data.error})\r\n        }\r\n        else{\r\n          setValues({...values,addSub:'',role:1,flag:!flag})\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n    function signupForm(){\r\n        return(\r\n            <div className=\"row\">\r\n            <div className=\"col-12 text-left\">\r\n              <form>\r\n                <div className=\"form-group my-2\">\r\n                  <label className=\"text-light\">Name</label>\r\n                  <input className=\"form-control\" onChange={handleChange(\"name\")} type=\"text\" value={name}/>\r\n                </div>\r\n                <div className=\"form-group my-2\">\r\n                  <label className=\"text-light\">Email</label>\r\n                  <input className=\"form-control\" onChange={handleChange(\"email\")} type=\"email\" value={email} />\r\n                </div>\r\n    \r\n                <div className=\"form-group my-2\">\r\n                  <label className=\"text-light\">Password</label>\r\n                  <input className=\"form-control\" onChange={handleChange(\"password\")} type=\"password\" value={password} />\r\n                </div>\r\n\r\n                <div className=\"form-group my-2\">\r\n                  <label className=\"text-light\">Signup as</label>                  \r\n                  <select className=\"form-control\" onChange={handleChange(\"role\")} value={role}>                    \r\n                    <option value=\"0\">Student</option>\r\n                    <option value=\"1\">Instructor</option>\r\n                  </select>\r\n                </div>\r\n\r\n                {(()=>{\r\n                  if(role==1){\r\n                    return (\r\n                      <>\r\n                      <div className=\"form-group my-2\">\r\n                  <label className=\"text-light\">Subjects</label><br/>                  \r\n                  <select className='w-100' name=\"subjects\"  multiple onChange={handleChange(\"subjects\")}>\r\n                  {allSubjects.map((subject,index)=>{\r\n                      return(\r\n                        <option key={index} value={subject._id}>{subject.name}</option>\r\n                      )\r\n                    })}                 \r\n                  </select>\r\n                  <p className='text-danger'>Press and Hold Ctrl to select multiple</p>\r\n                </div>\r\n                <div className=\"form-group my-2 d-flex\">\r\n                <input className=\"form-control\" placeholder='Add New Subject' type=\"text\" value={addSub} onChange={handleChange('addSub')}/>\r\n                <button className='btn btn-success ml-2'  onClick={addSubject}><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></button>\r\n                </div>\r\n                </>\r\n                    )\r\n                  }\r\n                })()}\r\n                \r\n\r\n                <button className=\"btn btn-success btn-block w-100\" onClick={onSubmit}>Submit</button>\r\n              </form>\r\n              <Link className=\"float-right\" to='/signin'>signin</Link>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n\r\n    const successMessage=()=>{\r\n      return(\r\n        <div className='alert alert-success' style={{display:success ? '':'none'}}>\r\n        New account created successfully\r\n        \r\n      </div>\r\n      )\r\n    }\r\n\r\n    const errorMessage=()=>{\r\n      return(\r\n        <div className='alert alert-danger' style={{display:error ? '':'none'}}>\r\n        {error}\r\n      </div>\r\n      )\r\n    }\r\n\r\n    return(\r\n        <div className='background-dark'>\r\n          <div className='pt-5 container'>\r\n          <h3 className=\"text-light text-center mb-4\">Sign up</h3>\r\n            {successMessage()}\r\n            {errorMessage()}\r\n            {signupForm()}\r\n            {performRedirect()}\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\auth\\helper\\authapicall.js",[],"C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\backenduri.js",[],"C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\StudentPanel.js",["96","97","98","99"],"import React,{useState,useEffect} from 'react'\r\nimport Dashboard from './Dashboard'\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport {isAuthenticated} from '../auth/helper/authapicall'\r\n\r\n\r\nfunction StudentPanel(){\r\n    return(\r\n        <Dashboard title='Student Panel'>\r\n        <h2 className='text-center'>Student Panel of Kraftshala’s Submission Portal</h2>\r\n        </Dashboard>\r\n    )\r\n}\r\n\r\nexport default StudentPanel","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\helper\\InstructorRoute.js",[],"C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\InstructorPanel.js",["100","101","102","103"],"import React,{useState,useEffect} from 'react'\r\nimport Dashboard from './Dashboard'\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport {isAuthenticated} from '../auth/helper/authapicall'\r\n\r\n\r\n\r\nfunction InstructorPanel(){\r\n    return(\r\n        <Dashboard title='Instructor Panel'>\r\n        <h2 className='text-center'>Instructor Panel of Kraftshala’s Submission Portal</h2>\r\n        </Dashboard>\r\n    )\r\n}\r\n\r\nexport default InstructorPanel","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\helper\\StudenRoute.js",[],"C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\AllSubmissions.js",["104","105","106","107","108","109","110"],"import React,{useState,useEffect} from 'react'\r\nimport Dashboard from './Dashboard'\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport {isAuthenticated} from '../auth/helper/authapicall'\r\nimport {getSubmissionI,updateGrade} from './helper/apicall'\r\n// import submission from '../../../backend/models/submission'\r\nimport {API} from '../backenduri'\r\nimport { Modal,Button } from 'react-bootstrap';\r\n\r\n\r\nfunction AllSubmissions(){\r\n\r\n    \r\n    const [values,setValues]=useState({\r\n        submissions:[],\r\n        error:'',\r\n        submission:'',\r\n        success:'',\r\n        loading:false,\r\n        grade:''\r\n    })\r\n\r\n    \r\n\r\n    //modal var\r\n    const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n    const {submissions,error,grade,submission,success,loading}=values\r\n\r\n    const user=isAuthenticated()\r\n   const loadSubmission=()=>{\r\n        getSubmissionI(user.userId,user.token).then(\r\n            data=>{\r\n                if(data.error){\r\n                    setValues({...values,error:data.error})\r\n                }\r\n                else{\r\n                    setValues({...values,error:'',submissions:data.submissions})\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // \r\n\r\n    const openSub=(submission)=>{console.log(submission)\r\n        setValues({...values,submission:submission})\r\n        setShow(true)\r\n    }\r\n\r\n    const handleChange=name=>event=>{\r\n\r\n        setValues({...values,[name]:event.target.value})\r\n        \r\n\r\n    }\r\n\r\n    const submitSol=()=>{\r\n        console.log(grade)\r\n        if(grade>10 || grade<0){\r\n            setValues({...values,error:'plese select value in between 0 to 10'})\r\n\r\n        }\r\n        \r\n       else{\r\n        updateGrade(user.userId,user.token,{id:submission,grade}).then(data=>{\r\n            if(data.error){\r\n                setValues({...values,submission:'',error:data.error})\r\n            }\r\n            else{\r\n                setValues({...values,submission:'',success:data.message})\r\n                \r\n            }\r\n            console.log(data)\r\n            setShow(false)\r\n        })\r\n       }\r\n        \r\n       \r\n    }\r\n\r\n    const closeSub=()=>{\r\n        setValues({...values,submission:'',formData:''})\r\n        setShow(false)\r\n    }\r\n\r\n    const viewUploadModal = () => {\r\n        return (\r\n           \r\n               <>\r\n\r\n                    <Modal  show={show} onHide={handleClose}>\r\n                            <Modal.Header >\r\n                            <Modal.Title>Rate Submission out of 10</Modal.Title>\r\n                            </Modal.Header>\r\n                            \r\n                            <Modal.Body>\r\n                               \r\n                            <form>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    onChange={handleChange(\"grade\")}                                 \r\n                                    className=\" mb-3 wd-25cent\"\r\n                                    type=\"number\"\r\n                                    name=\"grade\"\r\n                                    placeholder=\"Add grde\"\r\n                                    min=\"0\" max=\"10\" \r\n                                    \r\n                                />\r\n                                </div>    \r\n                            </form>   \r\n\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                            <Button variant=\"secondary\" onClick={closeSub}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={submitSol}>\r\n                                Upload Submission\r\n                            </Button>\r\n                        \r\n                            </Modal.Footer>\r\n                           \r\n                        </Modal>\r\n            </>\r\n           \r\n           \r\n                \r\n        )\r\n    }\r\n    // \r\n\r\n    useEffect(()=>{\r\n        loadSubmission()\r\n    },[success])\r\n\r\n    const  submittedSub=()=>{\r\n        return(\r\n            <>\r\n            <h4 className='text-center'>Submissions by students</h4>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Assignment Name</th>\r\n                    <th scope=\"col\">Subject</th>\r\n                    <th scope=\"col\">Submitted By</th>\r\n                    <th scope=\"col\">Submitted On(Data-Time)</th>\r\n                    <th scope=\"col\">Assignment File</th>\r\n                    <th scope=\"col\">Submitted File</th>                    \r\n                    <th scope=\"col\" >Grade</th>\r\n                    <th scope=\"col\" >Action</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {submissions.map((submission,index)=>{\r\n                    if(submission.assignment.createdBy!==null){\r\n                        return(\r\n                            <tr key={index}>\r\n                            <th scope=\"row\">{index+1}</th>\r\n                            <td>{submission.assignment.name}</td>\r\n                            <td>{submission.assignment.subject.name}</td>\r\n                            <td>{submission.submittedBy.name}</td>\r\n                            <td>{new Date(submission.onTime).toLocaleString('en-GB', { timeZone: 'Asia/Calcutta' })}</td>\r\n                            <td>\r\n                                <a href={API+'/get-file/'+submission.assignment.filname} target='_blank'>View Assignment</a>\r\n                            </td>\r\n                            <td>\r\n                            <a href={API+'/get-file/'+submission.filname} target='_blank'>View Submission</a>\r\n                             </td>\r\n                            <td>{submission.grade}</td>\r\n                            <td>\r\n                            <Button  className='btn-success ml-3' onClick={()=>openSub(submission._id)}>Update</Button>\r\n                            </td>\r\n    \r\n                            </tr>\r\n                            )\r\n                    }\r\n                    \r\n                })}\r\n                </tbody>\r\n            </table>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const successMessage=()=>(\r\n        <div className='alert alert-success' style={{display:success ? '':'none'}}>\r\n            {success}</div>\r\n            \r\n      )\r\n      const errorMessage=()=>{\r\n        return(\r\n          <div className='alert alert-danger' style={{display:error ? '':'none'}}>\r\n          {error}\r\n        </div>\r\n        )\r\n      }\r\n\r\n    return(\r\n        <Dashboard title='Instructor Panel'>\r\n            {successMessage()}\r\n            {errorMessage()}\r\n            {submittedSub()}\r\n            {viewUploadModal()}\r\n        </Dashboard>\r\n    )\r\n}\r\n\r\nexport default AllSubmissions","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\UpcomingAssignments.js",["111","112","113","114","115","116"],"import React,{useState,useEffect,useRef} from 'react'\r\nimport Dashboard from './Dashboard'\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport {isAuthenticated} from '../auth/helper/authapicall'\r\nimport {getUpcomingAssign,uploadSubmission} from './helper/apicall'\r\n\r\n\r\nimport { Modal,Button } from 'react-bootstrap';\r\nimport {API} from '../backenduri'\r\n\r\n\r\n\r\nfunction UpcomingAssignments(){\r\n    const modalRef = useRef();\r\n    const [values,setValues]=useState({\r\n        assignments:[],\r\n        error:'',\r\n        assignment:'',\r\n        filename:'',\r\n        formData:'',\r\n        success:'',\r\n        loading:false,\r\n    })\r\n\r\n    //modal var\r\n    const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n    const {assignments,error,filename,assignment,formData,success,loading}=values\r\n\r\n    const user=isAuthenticated()\r\n   const loadUpcomingAssignments=()=>{\r\n    getUpcomingAssign(user.userId,user.token).then(\r\n            data=>{console.log(data)\r\n                if(data.error){\r\n                    setValues({...values,error:data.error})\r\n                }\r\n                else{\r\n                    setValues({...values,error:'',assignments:data.assignments})\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const openSub=(assignment,filename)=>{\r\n        setValues({...values,assignment:assignment,filename:filename,formData:new FormData()})\r\n        setShow(true)\r\n    }\r\n\r\n    const handleChange=name=>event=>{\r\n        const value=name==='pdfFile'? event.target.files[0]: ''\r\n        formData.set(name,value)\r\n        formData.set('assignment',assignment)\r\n\r\n        setValues({...values,[name]:value})\r\n        \r\n\r\n    }\r\n\r\n    const submitSol=()=>{\r\n        //upload file\r\n        console.log(formData)\r\n        uploadSubmission(user.userId,user.token,formData).then(data=>{\r\n            if(data.error){\r\n                setValues({...values,assignment:'',filename:'',formData:'',error:data.error})\r\n            }\r\n            else{\r\n                setValues({...values,assignment:'',filename:'',formData:'',success:data.message})\r\n                \r\n            }\r\n            console.log(data)\r\n            setShow(false)\r\n        })\r\n        \r\n       \r\n    }\r\n\r\n    const closeSub=()=>{\r\n        setValues({...values,assignment:'',filename:'',formData:''})\r\n        setShow(false)\r\n    }\r\n\r\n    const viewUploadModal = () => {\r\n        return (\r\n           \r\n               <>\r\n\r\n                    <Modal ref={modalRef} show={show} onHide={handleClose}>\r\n                            <Modal.Header >\r\n                            <Modal.Title>Submit your File</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                \r\n                                <h5>Upload File</h5>\r\n\r\n                                <form>\r\n                                \r\n                                <div className=\"form-group\">\r\n                                <input  \r\n                                    onChange={handleChange(\"pdfFile\")}                                 \r\n                                    className=\" mb-3\"\r\n                                    type=\"file\"\r\n                                    name=\"pdfFile\"\r\n                                    accept=\"pdf\"\r\n                                    placeholder=\"upload PDF\"\r\n                                />\r\n                                </div>\r\n                                </form>\r\n\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                            <Button ref={modalRef} variant=\"secondary\" onClick={closeSub}>\r\n                                Close\r\n                            </Button>\r\n                            <Button variant=\"primary\" onClick={submitSol}>\r\n                                Upload Submission\r\n                            </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n            </>\r\n           \r\n           \r\n                \r\n        )\r\n    }\r\n\r\n    const showUpcoming=()=>{\r\n        return(\r\n            <>\r\n                <h4 className='text-center'>Upcoming Assignments</h4>\r\n                <table className=\"table\">\r\n           \r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Assignment Name</th>\r\n                    <th scope=\"col\">Subject</th>\r\n                    <th scope=\"col\">Deadline</th>\r\n                    <th scope=\"col\">Assignment File</th>                  \r\n                    <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {assignments.map((assignment,index)=>{\r\n                    return(\r\n                        <tr key={index}>\r\n                        <th scope=\"row\">{index+1}</th>\r\n                        <td>{assignment.name}</td>\r\n                        <td>{assignment.subject.name}</td>\r\n                        <td>{new Date(assignment.deadline).toLocaleString('en-GB', { timeZone: 'Asia/Calcutta' })}</td>\r\n                        <td>\r\n                            <a href={API+'/get-file/'+assignment.filname} target='_blank'>View Assignment</a>\r\n                        </td>\r\n                        <td><Button  className='btn-success' onClick={()=>openSub(assignment._id,assignment.filname)}>view/submit</Button></td>\r\n\r\n                        </tr>\r\n                        )\r\n                })}\r\n                </tbody>\r\n            </table>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        loadUpcomingAssignments()\r\n    },[])\r\n\r\n    const successMessage=()=>(\r\n        <div className='alert alert-success' style={{display:success ? '':'none'}}>\r\n            {success}</div>\r\n            \r\n      )\r\n      const errorMessage=()=>{\r\n        return(\r\n          <div className='alert alert-danger' style={{display:error ? '':'none'}}>\r\n          {error}\r\n        </div>\r\n        )\r\n      }\r\n\r\n    return(\r\n        <Dashboard title='Student Panel'>\r\n            {successMessage()}\r\n            {errorMessage()}\r\n            {viewUploadModal()}  \r\n            {showUpcoming()}\r\n           \r\n            \r\n        </Dashboard>\r\n    )\r\n}\r\n\r\nexport default UpcomingAssignments","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\StudentSubmissions.js",["117","118","119","120","121"],"import React,{useState,useEffect} from 'react'\r\nimport Dashboard from './Dashboard'\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport {isAuthenticated} from '../auth/helper/authapicall'\r\nimport {getSubmissionI,getSubmissionS} from './helper/apicall'\r\nimport {API} from '../backenduri'\r\n\r\n\r\n\r\nfunction StudentSubmissions(){\r\n\r\n    const [values,setValues]=useState({\r\n        submissions:[],\r\n        error:'',\r\n    })\r\n\r\n    const {submissions,error}=values\r\n\r\n\r\n    const user=isAuthenticated()\r\n   const loadSubmission=()=>{\r\n        getSubmissionS(user.userId,user.token).then(\r\n            data=>{\r\n                if(data.error){\r\n                    setValues({...values,error:data.error})\r\n                }\r\n                else{\r\n                    setValues({...values,error:'',submissions:data.submissions})\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadSubmission()\r\n    },[])\r\n\r\n    const errorMessage=()=>{\r\n        return(\r\n          <div className='alert alert-danger' style={{display:error ? '':'none'}}>\r\n          {error}\r\n        </div>\r\n        )\r\n      }\r\n\r\n    return(\r\n        <Dashboard title='Student Panel'>\r\n            {errorMessage()}\r\n        <h4 className='text-center'>Past Submissions</h4>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Assignment Name</th>\r\n                    <th scope=\"col\">Subject</th>\r\n                    <th scope=\"col\">Created By</th>\r\n                    <th scope=\"col\">Submitted On(Data-Time)</th>\r\n                    <th scope=\"col\">Assignment File</th>\r\n                    <th scope=\"col\">Submitted File</th>\r\n                    <th scope=\"col\">Grade</th>                                     \r\n                    \r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {submissions.map((submission,index)=>{\r\n                    return(\r\n                        <tr key={index}>\r\n                        <th scope=\"row\">{index+1}</th>\r\n                        <td>{submission.assignment.name}</td>\r\n                        <td>{submission.assignment.subject.name}</td>\r\n                        <td>{submission.assignment.createdBy.name}</td>\r\n                        <td>{new Date(submission.onTime).toLocaleString('en-GB', { timeZone: 'Asia/Calcutta' })}</td>\r\n                        <td><a href={API+'/get-file/'+submission.assignment.filname} target='_blank'>\r\n                            View Assignment\r\n                            </a>\r\n                        </td>\r\n                        <td><a href={API+'/get-file/'+submission.filname} target='_blank'>\r\n                            View Submission\r\n                            </a>\r\n                        </td>\r\n                        <td>{submission.grade}</td>\r\n                        \r\n\r\n                        </tr>\r\n                        )\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </Dashboard>\r\n    )\r\n}\r\n\r\nexport default StudentSubmissions","C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\helper\\apicall.js",[],"C:\\Users\\abhishek Gaur\\Documents\\visual studio\\kraftshala-assignment\\frontend\\src\\user\\InstructorAssignments.js",["122","123","124","125","126","127"],{"ruleId":"128","severity":1,"message":"129","line":4,"column":8,"nodeType":"130","messageId":"131","endLine":4,"endColumn":11},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"128","severity":1,"message":"136","line":1,"column":15,"nodeType":"130","messageId":"131","endLine":1,"endColumn":23},{"ruleId":"128","severity":1,"message":"137","line":1,"column":24,"nodeType":"130","messageId":"131","endLine":1,"endColumn":33},{"ruleId":"128","severity":1,"message":"138","line":18,"column":41,"nodeType":"130","messageId":"131","endLine":18,"endColumn":48},{"ruleId":"139","severity":1,"message":"140","line":21,"column":14,"nodeType":"141","messageId":"142","endLine":21,"endColumn":16},{"ruleId":"139","severity":1,"message":"140","line":57,"column":37,"nodeType":"141","messageId":"142","endLine":57,"endColumn":39},{"ruleId":"139","severity":1,"message":"140","line":60,"column":42,"nodeType":"141","messageId":"142","endLine":60,"endColumn":44},{"ruleId":"143","severity":1,"message":"144","line":75,"column":5,"nodeType":"145","endLine":75,"endColumn":7,"suggestions":"146"},{"ruleId":"139","severity":1,"message":"140","line":26,"column":14,"nodeType":"141","messageId":"142","endLine":26,"endColumn":16},{"ruleId":"143","severity":1,"message":"147","line":73,"column":5,"nodeType":"145","endLine":73,"endColumn":11,"suggestions":"148"},{"ruleId":"139","severity":1,"message":"140","line":117,"column":26,"nodeType":"141","messageId":"142","endLine":117,"endColumn":28},{"ruleId":"128","severity":1,"message":"136","line":1,"column":15,"nodeType":"130","messageId":"131","endLine":1,"endColumn":23},{"ruleId":"128","severity":1,"message":"137","line":1,"column":24,"nodeType":"130","messageId":"131","endLine":1,"endColumn":33},{"ruleId":"128","severity":1,"message":"149","line":4,"column":9,"nodeType":"130","messageId":"131","endLine":4,"endColumn":13},{"ruleId":"128","severity":1,"message":"150","line":5,"column":9,"nodeType":"130","messageId":"131","endLine":5,"endColumn":24},{"ruleId":"128","severity":1,"message":"136","line":1,"column":15,"nodeType":"130","messageId":"131","endLine":1,"endColumn":23},{"ruleId":"128","severity":1,"message":"137","line":1,"column":24,"nodeType":"130","messageId":"131","endLine":1,"endColumn":33},{"ruleId":"128","severity":1,"message":"149","line":4,"column":9,"nodeType":"130","messageId":"131","endLine":4,"endColumn":13},{"ruleId":"128","severity":1,"message":"150","line":5,"column":9,"nodeType":"130","messageId":"131","endLine":5,"endColumn":24},{"ruleId":"128","severity":1,"message":"149","line":4,"column":9,"nodeType":"130","messageId":"131","endLine":4,"endColumn":13},{"ruleId":"128","severity":1,"message":"151","line":30,"column":9,"nodeType":"130","messageId":"131","endLine":30,"endColumn":19},{"ruleId":"128","severity":1,"message":"138","line":32,"column":55,"nodeType":"130","messageId":"131","endLine":32,"endColumn":62},{"ruleId":"143","severity":1,"message":"152","line":139,"column":7,"nodeType":"145","endLine":139,"endColumn":16,"suggestions":"153"},{"ruleId":"154","severity":1,"message":"155","line":161,"column":52,"nodeType":"156","messageId":"157","endLine":161,"endColumn":54},{"ruleId":"158","severity":1,"message":"159","line":171,"column":33,"nodeType":"160","endLine":171,"endColumn":106},{"ruleId":"158","severity":1,"message":"159","line":174,"column":29,"nodeType":"160","endLine":174,"endColumn":91},{"ruleId":"128","severity":1,"message":"149","line":4,"column":9,"nodeType":"130","messageId":"131","endLine":4,"endColumn":13},{"ruleId":"128","severity":1,"message":"151","line":30,"column":9,"nodeType":"130","messageId":"131","endLine":30,"endColumn":19},{"ruleId":"128","severity":1,"message":"161","line":32,"column":30,"nodeType":"130","messageId":"131","endLine":32,"endColumn":38},{"ruleId":"128","severity":1,"message":"138","line":32,"column":67,"nodeType":"130","messageId":"131","endLine":32,"endColumn":74},{"ruleId":"158","severity":1,"message":"159","line":155,"column":29,"nodeType":"160","endLine":155,"endColumn":91},{"ruleId":"143","severity":1,"message":"162","line":171,"column":7,"nodeType":"145","endLine":171,"endColumn":9,"suggestions":"163"},{"ruleId":"128","severity":1,"message":"149","line":4,"column":9,"nodeType":"130","messageId":"131","endLine":4,"endColumn":13},{"ruleId":"128","severity":1,"message":"164","line":6,"column":9,"nodeType":"130","messageId":"131","endLine":6,"endColumn":23},{"ruleId":"143","severity":1,"message":"152","line":37,"column":7,"nodeType":"145","endLine":37,"endColumn":9,"suggestions":"165"},{"ruleId":"158","severity":1,"message":"159","line":75,"column":29,"nodeType":"160","endLine":75,"endColumn":102},{"ruleId":"158","severity":1,"message":"159","line":79,"column":29,"nodeType":"160","endLine":79,"endColumn":91},{"ruleId":"128","severity":1,"message":"149","line":4,"column":9,"nodeType":"130","messageId":"131","endLine":4,"endColumn":13},{"ruleId":"128","severity":1,"message":"166","line":7,"column":10,"nodeType":"130","messageId":"131","endLine":7,"endColumn":15},{"ruleId":"128","severity":1,"message":"167","line":31,"column":35,"nodeType":"130","messageId":"131","endLine":31,"endColumn":42},{"ruleId":"128","severity":1,"message":"138","line":31,"column":57,"nodeType":"130","messageId":"131","endLine":31,"endColumn":64},{"ruleId":"143","severity":1,"message":"168","line":96,"column":7,"nodeType":"145","endLine":96,"endColumn":9,"suggestions":"169"},{"ruleId":"158","severity":1,"message":"159","line":190,"column":27,"nodeType":"160","endLine":190,"endColumn":89},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["170"],"no-negated-in-lhs",["171"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'loading' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["172"],"React Hook useEffect has a missing dependency: 'loadSub'. Either include it or remove the dependency array.",["173"],"'Link' is defined but never used.","'isAuthenticated' is defined but never used.","'handleShow' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadSubmission'. Either include it or remove the dependency array.",["174"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'filename' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadUpcomingAssignments'. Either include it or remove the dependency array.",["175"],"'getSubmissionI' is defined but never used.",["176"],"'Modal' is defined but never used.","'subject' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadSubject'. Either include it or remove the dependency array.",["177"],"no-global-assign","no-unsafe-negation",{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [values]",{"range":"190","text":"191"},"Update the dependencies array to be: [flag, loadSub]",{"range":"192","text":"193"},"Update the dependencies array to be: [loadSubmission, success]",{"range":"194","text":"195"},"Update the dependencies array to be: [loadUpcomingAssignments]",{"range":"196","text":"197"},"Update the dependencies array to be: [loadSubmission]",{"range":"198","text":"199"},"Update the dependencies array to be: [loadSubject]",{"range":"200","text":"201"},[2055,2057],"[values]",[1895,1901],"[flag, loadSub]",[4088,4097],"[loadSubmission, success]",[5714,5716],"[loadUpcomingAssignments]",[927,929],"[loadSubmission]",[2509,2511],"[loadSubject]"]